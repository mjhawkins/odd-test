name: Build schemata & documentation and deploy to GitHub Pages
on:
  push:
    branches:
      - main
    paths:
      - odd/**
  workflow_dispatch:
  
# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  update-odd:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: main
      - name: Checkout TEI Stylesheets
        uses: actions/checkout@v3
        with:
          repository: TEIC/Stylesheets
          path: ./tei
      - name: Update RelaxNG Schemata
        run: |
          wget "https://github.com/Saxonica/Saxon-HE/raw/main/12/Java/SaxonHE12-1J.zip"
          unzip *.zip
          cd main/odd
          which java
          OIFS="$IFS"
          IFS=$'\n'
          for odd_name in *.odd; do
            rng_name="$(echo "$odd_name"| sed -E 's#\.[^.]*$##g')";
            $GITHUB_WORKSPACE/tei/bin/teitorelaxng "${odd_name}" "../rng/${rng_name}.rng";
            java -DentityExpansionLimit=9000000 -jar $GITHUB_WORKSPACE/saxon-he-12.1.jar -xi:on -o:$GITHUB_WORKSPACE/full.odd "${odd_name}" $GITHUB_WORKSPACE/tei/odds/odd2odd.xsl
            java -DentityExpansionLimit=9000000 -jar $GITHUB_WORKSPACE/saxon-he-12.1.jar -xi:on -o:../documentation/${rng_name}.html "$GITHUB_WORKSPACE/full.odd" $GITHUB_WORKSPACE/tei/odds/odd2html.xsl
          done;
          IFS="$OIFS"
          git config --global user.name 'ODD Bot'
          git config --global user.email '<>'
          git add ../rng/*.rng ../documentation/*.html
          git diff-index --quiet HEAD || (git commit -am "Workflow: Generate RelaxNG schemata and documentation" && git push)
  deploy:
    if: ${{ always() }}
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          # Upload entire repository
          path: '.'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
